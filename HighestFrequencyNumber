import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class HighestFrequencyNumber {

	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(1,1,1,1,6,6,6,6,6,6,2,2,3,3,3,4,4,4,4, 4,5,5,5,5,5,5);
		findHighestFreqNumber(numbers);
	}
	
	/**
	 * This method finds the maximum n th number whose frequency is same as nth number.
	 * 
	 * @param numbers
	 */
	private static void findHighestFreqNumber(List<Integer> numbers) {
		
		Map<Integer, Long> collect = numbers.stream().collect(Collectors.groupingBy(c -> c, Collectors.counting()));
		System.out.println("Number Freq: "+collect);
		// Find maximum nth number and whose frequency is same as nth Number.
		// Eg: 1=4, 2=2, 3=3, 4=5, 6=6
		// 2=2, 3=3, 6=6, so maximum is 6, it should print result as 6
		Integer maxValu = collect.entrySet().stream().filter(e -> Long.valueOf(e.getKey()).equals(e.getValue())).max(Comparator.comparing(Map.Entry :: getKey)).get().getKey();
		System.out.println("Max Value: "+maxValu);
	}

}
